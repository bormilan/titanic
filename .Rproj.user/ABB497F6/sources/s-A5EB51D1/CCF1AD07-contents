---
title: "Titanic Temalabor"
output: html_notebook
---

#Olvassuk be az adatokat:
```{r}
train <- read.csv('train.csv')
test <- read.csv('test.csv')
result <- read.csv('gender_submission.csv')
```

#a notebookban használt library-k:
```{r}
library(ROCR)
library(Metrics)
```

#Elemezzuk a típusaikat és értékeiket:
```{r}
str(train)
sapply(train, function(y) sum(length(which(is.na(y)))))
sapply(train, function(y) sum(length(which(y == ""))))
```
Tehat az Age oszlopban 177 na érték van, ezért ezeket a sorokat törölni kell.
A Cabin oszlopban pedig 687 üres rekord, ezert az egészet eldobom, ugyanis igy nem veszem hasznát.
Az embarked oszlopban van még két üres rekord, ezekbe egyesével beletöltöm az oszlop legtöbbszor megjelenő értékét.

```{r}
train <- na.omit(train)

train$Cabin <- NULL

nulls <- train[train$Embarked == "",]
table(train$Embarked)
train[train$Name == "Icard, Miss. Amelie","Embarked"] <- "C"
train[train$Name == "Stone, Mrs. George Nelson (Martha Evelyn)","Embarked"] <- "C"
train$Embarked <- droplevels(train$Embarked)
```
Emellett a táblat nézve arra a döntésre jutottam, hogy a Ticket oszlop most nem fog segítseget nyújtani úgyhogy azt elhagyom.
```{r}
train$Ticket <- NULL
```
változtassuk meg a pclass oszlop típusát
```{r}
train$Pclass <- as.factor(train$Pclass)
```

#Most a test halmazt is tekintsük ugyanígy meg:
```{r}
summary(test)
sapply(test, function(y) sum(length(which(is.na(y)))))
sapply(test, function(y) sum(length(which(y == ""))))
```

Itt azt latjuk hogy az age oszlopban hianyzik 86 ertek. Ez elég sok ha azt nezzuk hogy 418 sor van alapvetoen a tablaban, de ezekkel a sorokkal sajnos akkor sem tudunk mit csinalni, torolni kell.
Illetve a Cabin oszlopot itt is szinten toroljuk, illetve a ticket oszlopot is.

```{r}
test$Survived <- result$Survived
test <- na.omit(test)

test$Cabin <- NULL
test$Ticket <- NULL
```

változtassuk meg a pclass oszlop típusát
```{r}
test$Pclass <- as.factor(test$Pclass)
```


#Nézzük meg hogy az utasok hány százaléka élte túl a tanitó adathalmazban:
```{r}
temp <- table(train$Survived == 1)
pct <- (temp[2] / (temp[1] + temp[2]))*100
cat(round(pct,2),"%")
```
#nézzük meg hogy a túlélők hogyan oszlanak meg nemek szerint:
```{r}
f_sex <- factor(train$Sex)
f_survived <- factor(train$Survived)
males <- length(train[train$Survived == 1 & train$Sex == "male","Name"])
females <- length(train[train$Survived == 1 & train$Sex == "female","Name"])
all_survived <- males + females
cat("Összesen túlélte:",all_survived,"ember, ebből",females," nő, és",males,"férfi")

survived_bar <- c(males,females)
names(survived_bar) <- c("male","female")

barplot(survived_bar,horiz = T,col = survived_bar/10,xlim=c(0,200),main= "túlélők száma nemek szerint")
```
Láthatjuk hogy több mint kétszerannyi nő élte túl, mint férfi.

#Nézzük meg ezt százalékos arányban is.
```{r}
survived <- train[train$Survived == 1,]

femalePct <- sum(survived$Sex == "female") / sum(train$Sex == "female")
malePct <- sum(survived$Sex == "male") / sum(train$Sex == "male")

allPct <- c(femalePct,malePct)
names(allPct) <- c("female","male")

barplot(allPct,col = allPct*10,horiz = T,xlim = c(0,1),main="Túlélés esélye nemek szerint")
```
Óriási különbséget tapasztalunk a két valószínűségben.


#Nézzuk meg az emberek korainak eloszlását:
```{r}
plot(x = train$Sex, y = train$Age,
col ="blue", pch = 1, cex = 1.5,
main = "Utasok kor eloszlása nem szerint",
xlab = "",
ylab = "Kor"
)
```
Mint láthatjuk, javarészt fiatal felnőttek és középkorúak utaztak a hajón.
Most nezzuk meg hogy ez hogy nez ki, ha csak a tuleloket vesszuk bele:
```{r}
plot(x = survived$Sex, y = survived$Age,
col ="blue", pch = 1, cex = 1.5,
main = "Túlélők kor eloszlása nem szerint",
xlab = "",
ylab = "Kor"
)
```
#Most nézzük meg százalékosan a túlélés esélyét, korokra lebontva.
```{r}
kids <- sum(survived$Age < 10) / sum(train$Age < 10)
teenagers <- sum(survived$Age >= 10 & survived$Age < 20) / sum(train$Age >= 10 & train$Age < 20)
adults <- sum(survived$Age >= 20 & survived$Age < 50) / sum(train$Age >= 20 & train$Age < 50)
elders <- sum(survived$Age >= 50) / sum(survived$Age >= 50)

allAges <- c(kids,teenagers,adults,elders)
names(allAges) <- c("(0-9)","(10-19)","(20-49)","(50-)")

barplot(allAges,col = rainbow(25),horiz = T,xlim = c(0,1),main = "Túlélés esélye kor szerint",xlab="Valószínűség",ylab="Kor")
```
Nagyon érdekes információt olvashatunk le erről a diagrammról. Előszöris, az 50+ kategóriába tartozó utasok 100%-os eséllyel túlélték a katasztrófát, viszont a 10 alattiak csak ~60%-os eséllyel, ami szomorú, arról nem is ebszélve hogy a fiatal felnőttek és középkorúak, csak ~40%-os eséllyel.

#Most nézzük meg hogy testvérek szerint hogyan oszlanak meg az utasok:
```{r}
sibsbTable <- table(train$SibSp)
barplot(sibsbTable,ylab="testvérek száma",xlab="fők száma",horiz = T,col= rainbow(25),xlim=c(0,200),main="Utasok száma testvérek száma szerint")
```

Ebből láthatjuk hogy a legtöbben vagy egyáltalán nem, vagy csak egy testvért hoztak az útra.

#Ezután azt is erdekes megfigyelni hogy hányan érkeztek gyermekkel vagy szülővel:
```{r}
parchTable <- table(train$Parch)
barplot(parchTable,ylab="szülő vagy gyerekek száma",xlab="fők száma",horiz = T,col= rainbow(25),xlim=c(0,200),main = "Utasok száma, gyerekek/szülők száma szerint csoportosítva")
```
Érdekes hogy van egy eset ahol 6 gyermek/szülő is jött az utassal, viszont nagyrészt itt is az utasok vagy egyáltalán nem vagy csak egy szülő/gyermek-et hoztak magukkal. Itt többen vannak olyanok is akik kettővel, viszont a többi nagyon elenyesző.

#Most nézzük meg hogy undulás szerint hogyan oszlanak meg az utasok:
```{r}
embarkTable <- table(train$Embarked)
barplot(embarkTable,horiz = T,xlab="fők száma",ylab="beszállás kódja",col = rainbow(25),main="Utasok száma indulás szerint")
```

#Most ugyanezt a túlélőkre:
```{r}
survivedEmbarkTable <- table(survived$Embarked)
barplot(survivedEmbarkTable,col = rainbow(25),horiz = T,xlab="túlélők száma",ylab="indulás kódja",main="Túlélők száma indulás szerint")
```
Láthatjuk hogy arányaiban szinte semmi változás nincs, csak a fők számában.

#Most nézzük meg hogy az indulási kódok mennyire befolyásolták a túlélés esélyét
```{r}
cPct <- sum(survived$Embarked == "C") / sum(train$Embarked == "C")
qPct <- sum(survived$Embarked == "Q") / sum(train$Embarked == "Q")
sPct <- sum(survived$Embarked == "S") / sum(train$Embarked == "S")

allPct <- c(cPct,qPct,sPct)
names(allPct) <- c("C","Q","S")

barplot(allPct,col = rainbow(25),main="Túlélési esély indulás szerint",horiz = T,xlab = "túlélési esély",ylab = "indulási kód",xlim= c(0,1))
```
Így mostmár láthatjuk hogy a C indulási kóddal rendelkezők nagyobb eséllyel élték túl.

#Ezutan nezzunk meg egy kicsit erdekesebb osszefuggest is, megpedig hogy osztalyok szerint milyen eloszlasban eltek tul az utasok:
```{r}
pclassTable <- table(survived$Pclass)
barplot(pclassTable,xlab="fők száma", ylab="osztályok",col=rainbow(25),horiz = T,main = "Túlélők száma osztályok szerint")
```

Érdekes látni hogy első osztályon utazóként sokkal nagyobb eséllyel élték túl az emberek, és hogy a második és harmadik osztályon ugyanannyian vannak nagysagrendileg a túlélők.

#Ezutan azt is erdekes lenne megtekinteni hogy szazalekos aranyban hogy nez ki a tulelok aranya, osztalyok szerint:
```{r}
c1pct <- (sum(survived$Pclass == 1) / sum(train$Pclass == 1))
c2pct <- (sum(survived$Pclass == 2) / sum(train$Pclass == 2))
c3pct <- (sum(survived$Pclass == 3) / sum(train$Pclass == 3))
allPct <- c(c1pct,c2pct,c3pct)
names(allPct) <- c(1,2,3)
barplot(allPct,xlim=c(0,1),horiz = T,col = rainbow(25),xlab = "Túlélés esélye",ylab = "Osztályok száma", main = "Túlélés esélye osztályok szerint")
```
Százalékosan nézve az arányokat viszont nagyon látszik, hogy minél alacsonyabb osztályon utazott az utas, annál kevesebb esélye volt túlélni a katasztrófát.

#Konklúziók a predikció előtt:
  -az utasok neme nagyon fontos adat, ugyanis számban és arányaiban is sokkal több nő élte túl mint férfi
  -az utasok kora is fontos tényező, ugyanis az 50+ kórúak szinte 100%-osan túlélték, míg a fiatal és közép   korúak csak ~40%-ban.
  -az indulás azért fontos tényező, mert az egyik indulási kód kiemelkedő túlélési esélyt mutat
  -az osztályok nagyon befojásolóak, hiszem az első osztályon több mint 60% a túlélési esély, még a          harmadikon csak kicsit több mint 20%, majdnem a fele.
  
#Most vizsgáljuk meg az attribútumok közötti korrelációkat:
-ehhez numerikus értékké kell alakítani amit tudunk, amit meg nem(Name,Embarked stb.) azt meg kihagyjuk.
```{r}
corTrain <- train
corTrain$PassengerId <- NULL
corTrain$Name <- NULL
corTrain$Embarked <- NULL
corTrain$Sex <- as.numeric(train$Sex)
corTrain$Pclass <- as.numeric(train$Pclass)
cor(corTrain)
```

#Most készítsünk egy regressziós modellt, binomiális prediktorral:
```{r}
model <- glm(Survived ~ Age + Sex + Pclass + Embarked, data = train, family = binomial)
summary(model)
```
#Ebből leolvashatjuk:
  -a nemeknél ha az utas férfi, akkor 2.52-vel romlik az esélye
  -a pclass-nál 1,14-el romlik az esély, ha valaki másod osztályon utazott, illetve 2,41-el, ha harmad osztályon
```{r}
exp(model$coefficients)
```


#Most nézzük meg hogy milyen eredményt kapunk a tesztadatokra
```{r}
pred <- predict(model,newdata = test)

test$pred <- pred > 1
test$pred <- factor(test$pred,c(FALSE,TRUE),c('0','1'))
sum(test$pred == "1") / length(test$PassengerId)
```
A predikció szerint a tesztadatok utasainak csupán a 24,7%-a élte túl.

#Nézzük meg, hogy milyen arányban sikerült predikálni a túlélést:
```{r}
accuracy(test$Survived,test$pred)
```
Az accuracy függvény szerint, 85%-ban sikerült jól predikálni a túléléseket.

#Modell kiértékelés
```{r}
cor(train$Survived,model$fitted.values)

pr <- prediction(pred,test$Survived)
perf <- performance(pr,measure = "tpr", x.measure = "fpr")
plot(perf)
auc(test$Survived,test$pred)
```
Az AUC elég magas, 81%, és a ROC görbe is jól mutatja, hogy kevés hibával dolgozott a modell.

#Most alkalmazzuk rajta a randomForest klasszifikációs modellt:
```{r}
library(randomForest)

modelRF <- randomForest(factor(Survived) ~ Pclass + Fare + Embarked + Sex, data=train, importance=TRUE)
modelRF
```
A keveredési mátrixból lehet látni, hogy milyen számban osztályozott a modell helyesen, illetve helytelenül.
400 + 172 alkalommal helyesen, míg 24 + 118 alkalommal helytelenül.

#Nézzük meg az attribútumok fontosságait:
```{r}
varImpPlot(modelRF)
```
```{r}
importance(modelRF)
```
Ezekből láthatjuk hogy a különböző attribútumok milyen fontosságúak.

#miután kész a modell, jöhet a predikció:
```{r}
test$predRF <- predict(modelRF,newdata = test)
sum(test$predRF == "1") / length(test$PassengerId)
```
Ezuttal már az utasok 31%-a élte túl, ebből arra következtethetünk, hogy vagy jobb lesz a teljesítménye ennek a modellnek, vagy pedig sok false positive eredmény lett, tehát olyan utas, aki nem élte túl, túléltnek osztályozva.
#az accuracy-vel ezt leellenőrizhetjük:
```{r}
accuracy(test$Survived,test$predRF)
```
Láthatjuk, hogy valóban sokkal jobb eredményt ért el ez a modell.
A következtetés ez alapján, hogy erre az adott adathalmazra sokkal jobb megoldás egy osztályozó algoritmus, mint egy regressziós. Ezt lehet látni abból is, hogy az age szerinti túlélési arány nem lineáris, a középkorúak kevesebb eséllyel élték túl, mint az öregek és mint a gyerekek, illetve a többi attribútum típusa, inkább faktorként kezelendő, ezek sem lineárisak.

Köszönöm hogy végigolvastad ezt a notebookot.
Forrás:
  -a dataset itt található meg: https://www.kaggle.com/c/titanic 
  -a randomForest alkalmazását innen tanultam:                     https://www.kaggle.com/lashkare/simple-yet-effective-titanic-solution#SPLITTING-DATA-INTO-TRAINING-AND-TEST-SET
