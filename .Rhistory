allPct <- c(cPct,qPct,sPct)
names(allPct) <- c("C","Q","S")
barplot(allPct,col = rainbow(25),main="Túlélési esély indulás szerint",horiz = T,xlab = "túlélési esély",ylab = "indulási kód",xlim= c(0,1))
pclassTable <- table(survived$Pclass)
barplot(pclassTable,xlab="fők száma", ylab="osztályok",col=rainbow(25),horiz = T,main = "Túlélők száma osztályok szerint")
c1pct <- (sum(survived$Pclass == 1) / sum(train$Pclass == 1))
c2pct <- (sum(survived$Pclass == 2) / sum(train$Pclass == 2))
c3pct <- (sum(survived$Pclass == 3) / sum(train$Pclass == 3))
allPct <- c(c1pct,c2pct,c3pct)
names(allPct) <- c(1,2,3)
barplot(allPct,xlim=c(0,1),horiz = T,col = rainbow(25),xlab = "Túlélés esélye",ylab = "Osztályok száma", main = "Túlélés esélye osztályok szerint")
corTrain <- train
corTrain$PassengerId <- NULL
corTrain$Name <- NULL
corTrain$Embarked <- NULL
corTrain$Sex <- as.numeric(train$Sex)
corTrain$Pclass <- as.numeric(train$Pclass)
cor(corTrain)
model <- glm(Survived ~ Age + Sex + Pclass + Embarked, data = train, family = binomial)
summary(model)
exp(model$coefficients)
pred <- predict(model,newdata = test)
test$pred <- pred > 1
test$pred <- factor(test$pred,c(FALSE,TRUE),c('0','1'))
sum(test$pred == "1") / length(test$PassengerId)
accuracy(test$Survived,test$pred)
cor(train$Survived,model$fitted.values)
pr <- prediction(pred,test$Survived)
perf <- performance(pr,measure = "tpr", x.measure = "fpr")
plot(perf)
auc(test$Survived,test$pred)
modelRF <- randomForest(factor(Survived) ~ Pclass + Fare + Embarked + Sex, data=train, importance=TRUE)
modelRF
varImpPlot(modelRF)
importance(modelRF)
test$predRF <- predict(modelRF,newdata = test)
sum(test$predRF == "1") / length(test$PassengerId)
accuracy(test$Survived,test$predRF)
library(rmarkdown)
render("Titanic_Temalabor", output_format = "word_document")
knitr::opts_chunk$set(include = TRUE)
train <- read.csv('train.csv')
test <- read.csv('test.csv')
result <- read.csv('gender_submission.csv')
library(ROCR)
library(Metrics)
library(randomForest)
str(train)
sapply(train, function(y) sum(length(which(is.na(y)))))
sapply(train, function(y) sum(length(which(y == ""))))
train <- na.omit(train)
train$Cabin <- NULL
nulls <- train[train$Embarked == "",]
table(train$Embarked)
train[train$Name == "Icard, Miss. Amelie","Embarked"] <- "C"
train[train$Name == "Stone, Mrs. George Nelson (Martha Evelyn)","Embarked"] <- "C"
train$Embarked <- droplevels(train$Embarked)
train$Ticket <- NULL
train$Pclass <- as.factor(train$Pclass)
summary(test)
sapply(test, function(y) sum(length(which(is.na(y)))))
sapply(test, function(y) sum(length(which(y == ""))))
test$Survived <- result$Survived
test <- na.omit(test)
test$Cabin <- NULL
test$Ticket <- NULL
test$Pclass <- as.factor(test$Pclass)
temp <- table(train$Survived == 1)
pct <- (temp[2] / (temp[1] + temp[2]))*100
cat(round(pct,2),"%")
f_sex <- factor(train$Sex)
f_survived <- factor(train$Survived)
males <- length(train[train$Survived == 1 & train$Sex == "male","Name"])
females <- length(train[train$Survived == 1 & train$Sex == "female","Name"])
all_survived <- males + females
cat("Összesen túlélte:",all_survived,"ember, ebből",females," nő, és",males,"férfi")
survived_bar <- c(males,females)
names(survived_bar) <- c("male","female")
barplot(survived_bar,horiz = T,col = survived_bar/10,xlim=c(0,200),main= "túlélők száma nemek szerint")
survived <- train[train$Survived == 1,]
femalePct <- sum(survived$Sex == "female") / sum(train$Sex == "female")
malePct <- sum(survived$Sex == "male") / sum(train$Sex == "male")
allPct <- c(femalePct,malePct)
names(allPct) <- c("female","male")
barplot(allPct,col = allPct*10,horiz = T,xlim = c(0,1),main="Túlélés esélye nemek szerint")
plot(x = train$Sex, y = train$Age,
col ="blue", pch = 1, cex = 1.5,
main = "Utasok kor eloszlása nem szerint",
xlab = "",
ylab = "Kor"
)
plot(x = survived$Sex, y = survived$Age,
col ="blue", pch = 1, cex = 1.5,
main = "Túlélők kor eloszlása nem szerint",
xlab = "",
ylab = "Kor"
)
kids <- sum(survived$Age < 10) / sum(train$Age < 10)
teenagers <- sum(survived$Age >= 10 & survived$Age < 20) / sum(train$Age >= 10 & train$Age < 20)
adults <- sum(survived$Age >= 20 & survived$Age < 50) / sum(train$Age >= 20 & train$Age < 50)
elders <- sum(survived$Age >= 50) / sum(survived$Age >= 50)
allAges <- c(kids,teenagers,adults,elders)
names(allAges) <- c("(0-9)","(10-19)","(20-49)","(50-)")
barplot(allAges,col = rainbow(25),horiz = T,xlim = c(0,1),main = "Túlélés esélye kor szerint",xlab="Valószínűség",ylab="Kor")
sibsbTable <- table(train$SibSp)
barplot(sibsbTable,ylab="testvérek száma",xlab="fők száma",horiz = T,col= rainbow(25),xlim=c(0,200),main="Utasok száma testvérek száma szerint")
parchTable <- table(train$Parch)
barplot(parchTable,ylab="szülő vagy gyerekek száma",xlab="fők száma",horiz = T,col= rainbow(25),xlim=c(0,200),main = "Utasok száma, gyerekek/szülők száma szerint csoportosítva")
embarkTable <- table(train$Embarked)
barplot(embarkTable,horiz = T,xlab="fők száma",ylab="beszállás kódja",col = rainbow(25),main="Utasok száma indulás szerint")
survivedEmbarkTable <- table(survived$Embarked)
barplot(survivedEmbarkTable,col = rainbow(25),horiz = T,xlab="túlélők száma",ylab="indulás kódja",main="Túlélők száma indulás szerint")
cPct <- sum(survived$Embarked == "C") / sum(train$Embarked == "C")
qPct <- sum(survived$Embarked == "Q") / sum(train$Embarked == "Q")
sPct <- sum(survived$Embarked == "S") / sum(train$Embarked == "S")
allPct <- c(cPct,qPct,sPct)
names(allPct) <- c("C","Q","S")
barplot(allPct,col = rainbow(25),main="Túlélési esély indulás szerint",horiz = T,xlab = "túlélési esély",ylab = "indulási kód",xlim= c(0,1))
pclassTable <- table(survived$Pclass)
barplot(pclassTable,xlab="fők száma", ylab="osztályok",col=rainbow(25),horiz = T,main = "Túlélők száma osztályok szerint")
c1pct <- (sum(survived$Pclass == 1) / sum(train$Pclass == 1))
c2pct <- (sum(survived$Pclass == 2) / sum(train$Pclass == 2))
c3pct <- (sum(survived$Pclass == 3) / sum(train$Pclass == 3))
allPct <- c(c1pct,c2pct,c3pct)
names(allPct) <- c(1,2,3)
barplot(allPct,xlim=c(0,1),horiz = T,col = rainbow(25),xlab = "Túlélés esélye",ylab = "Osztályok száma", main = "Túlélés esélye osztályok szerint")
corTrain <- train
corTrain$PassengerId <- NULL
corTrain$Name <- NULL
corTrain$Embarked <- NULL
corTrain$Sex <- as.numeric(train$Sex)
corTrain$Pclass <- as.numeric(train$Pclass)
cor(corTrain)
model <- glm(Survived ~ Age + Sex + Pclass + Embarked, data = train, family = binomial)
summary(model)
exp(model$coefficients)
pred <- predict(model,newdata = test)
test$pred <- pred > 1
test$pred <- factor(test$pred,c(FALSE,TRUE),c('0','1'))
sum(test$pred == "1") / length(test$PassengerId)
accuracy(test$Survived,test$pred)
cor(train$Survived,model$fitted.values)
pr <- prediction(pred,test$Survived)
perf <- performance(pr,measure = "tpr", x.measure = "fpr")
plot(perf)
auc(test$Survived,test$pred)
modelRF <- randomForest(factor(Survived) ~ Pclass + Fare + Embarked + Sex, data=train, importance=TRUE)
modelRF
varImpPlot(modelRF)
importance(modelRF)
test$predRF <- predict(modelRF,newdata = test)
sum(test$predRF == "1") / length(test$PassengerId)
accuracy(test$Survived,test$predRF)
library(rmarkdown)
render("Titanic_Temalabor", output_format = "word_document")
knitr::opts_chunk$set(include = TRUE)
train <- read.csv('train.csv')
test <- read.csv('test.csv')
result <- read.csv('gender_submission.csv')
library(ROCR)
library(Metrics)
library(randomForest)
str(train)
sapply(train, function(y) sum(length(which(is.na(y)))))
sapply(train, function(y) sum(length(which(y == ""))))
train <- na.omit(train)
train$Cabin <- NULL
nulls <- train[train$Embarked == "",]
table(train$Embarked)
train[train$Name == "Icard, Miss. Amelie","Embarked"] <- "C"
train[train$Name == "Stone, Mrs. George Nelson (Martha Evelyn)","Embarked"] <- "C"
train$Embarked <- droplevels(train$Embarked)
train$Ticket <- NULL
train$Pclass <- as.factor(train$Pclass)
summary(test)
sapply(test, function(y) sum(length(which(is.na(y)))))
sapply(test, function(y) sum(length(which(y == ""))))
test$Survived <- result$Survived
test <- na.omit(test)
test$Cabin <- NULL
test$Ticket <- NULL
test$Pclass <- as.factor(test$Pclass)
temp <- table(train$Survived == 1)
pct <- (temp[2] / (temp[1] + temp[2]))*100
cat(round(pct,2),"%")
f_sex <- factor(train$Sex)
f_survived <- factor(train$Survived)
males <- length(train[train$Survived == 1 & train$Sex == "male","Name"])
females <- length(train[train$Survived == 1 & train$Sex == "female","Name"])
all_survived <- males + females
cat("Összesen túlélte:",all_survived,"ember, ebből",females," nő, és",males,"férfi")
survived_bar <- c(males,females)
names(survived_bar) <- c("male","female")
barplot(survived_bar,horiz = T,col = survived_bar/10,xlim=c(0,200),main= "túlélők száma nemek szerint")
survived <- train[train$Survived == 1,]
femalePct <- sum(survived$Sex == "female") / sum(train$Sex == "female")
malePct <- sum(survived$Sex == "male") / sum(train$Sex == "male")
allPct <- c(femalePct,malePct)
names(allPct) <- c("female","male")
barplot(allPct,col = allPct*10,horiz = T,xlim = c(0,1),main="Túlélés esélye nemek szerint")
plot(x = train$Sex, y = train$Age,
col ="blue", pch = 1, cex = 1.5,
main = "Utasok kor eloszlása nem szerint",
xlab = "",
ylab = "Kor"
)
plot(x = survived$Sex, y = survived$Age,
col ="blue", pch = 1, cex = 1.5,
main = "Túlélők kor eloszlása nem szerint",
xlab = "",
ylab = "Kor"
)
kids <- sum(survived$Age < 10) / sum(train$Age < 10)
teenagers <- sum(survived$Age >= 10 & survived$Age < 20) / sum(train$Age >= 10 & train$Age < 20)
adults <- sum(survived$Age >= 20 & survived$Age < 50) / sum(train$Age >= 20 & train$Age < 50)
elders <- sum(survived$Age >= 50) / sum(survived$Age >= 50)
allAges <- c(kids,teenagers,adults,elders)
names(allAges) <- c("(0-9)","(10-19)","(20-49)","(50-)")
barplot(allAges,col = rainbow(25),horiz = T,xlim = c(0,1),main = "Túlélés esélye kor szerint",xlab="Valószínűség",ylab="Kor")
sibsbTable <- table(train$SibSp)
barplot(sibsbTable,ylab="testvérek száma",xlab="fők száma",horiz = T,col= rainbow(25),xlim=c(0,200),main="Utasok száma testvérek száma szerint")
parchTable <- table(train$Parch)
barplot(parchTable,ylab="szülő vagy gyerekek száma",xlab="fők száma",horiz = T,col= rainbow(25),xlim=c(0,200),main = "Utasok száma, gyerekek/szülők száma szerint csoportosítva")
embarkTable <- table(train$Embarked)
barplot(embarkTable,horiz = T,xlab="fők száma",ylab="beszállás kódja",col = rainbow(25),main="Utasok száma indulás szerint")
survivedEmbarkTable <- table(survived$Embarked)
barplot(survivedEmbarkTable,col = rainbow(25),horiz = T,xlab="túlélők száma",ylab="indulás kódja",main="Túlélők száma indulás szerint")
cPct <- sum(survived$Embarked == "C") / sum(train$Embarked == "C")
qPct <- sum(survived$Embarked == "Q") / sum(train$Embarked == "Q")
sPct <- sum(survived$Embarked == "S") / sum(train$Embarked == "S")
allPct <- c(cPct,qPct,sPct)
names(allPct) <- c("C","Q","S")
barplot(allPct,col = rainbow(25),main="Túlélési esély indulás szerint",horiz = T,xlab = "túlélési esély",ylab = "indulási kód",xlim= c(0,1))
pclassTable <- table(survived$Pclass)
barplot(pclassTable,xlab="fők száma", ylab="osztályok",col=rainbow(25),horiz = T,main = "Túlélők száma osztályok szerint")
c1pct <- (sum(survived$Pclass == 1) / sum(train$Pclass == 1))
c2pct <- (sum(survived$Pclass == 2) / sum(train$Pclass == 2))
c3pct <- (sum(survived$Pclass == 3) / sum(train$Pclass == 3))
allPct <- c(c1pct,c2pct,c3pct)
names(allPct) <- c(1,2,3)
barplot(allPct,xlim=c(0,1),horiz = T,col = rainbow(25),xlab = "Túlélés esélye",ylab = "Osztályok száma", main = "Túlélés esélye osztályok szerint")
corTrain <- train
corTrain$PassengerId <- NULL
corTrain$Name <- NULL
corTrain$Embarked <- NULL
corTrain$Sex <- as.numeric(train$Sex)
corTrain$Pclass <- as.numeric(train$Pclass)
cor(corTrain)
model <- glm(Survived ~ Age + Sex + Pclass + Embarked, data = train, family = binomial)
summary(model)
exp(model$coefficients)
pred <- predict(model,newdata = test)
test$pred <- pred > 1
test$pred <- factor(test$pred,c(FALSE,TRUE),c('0','1'))
sum(test$pred == "1") / length(test$PassengerId)
accuracy(test$Survived,test$pred)
cor(train$Survived,model$fitted.values)
pr <- prediction(pred,test$Survived)
perf <- performance(pr,measure = "tpr", x.measure = "fpr")
plot(perf)
auc(test$Survived,test$pred)
modelRF <- randomForest(factor(Survived) ~ Pclass + Fare + Embarked + Sex, data=train, importance=TRUE)
modelRF
varImpPlot(modelRF)
importance(modelRF)
test$predRF <- predict(modelRF,newdata = test)
sum(test$predRF == "1") / length(test$PassengerId)
accuracy(test$Survived,test$predRF)
library(rmarkdown)
render("Titanic_Temalabor", output_format = "word_document")
str(train)
sapply(train, function(y) sum(length(which(is.na(y)))))
sapply(train, function(y) sum(length(which(y == ""))))
train <- read.csv('train.csv')
train <- read.csv('train.csv')
test <- read.csv('test.csv')
result <- read.csv('gender_submission.csv')
library(ROCR)
library(Metrics)
library(randomForest)
str(train)
sapply(train, function(y) sum(length(which(is.na(y)))))
sapply(train, function(y) sum(length(which(y == ""))))
train <- na.omit(train)
train$Cabin <- NULL
nulls <- train[train$Embarked == "",]
table(train$Embarked)
train[train$Name == "Icard, Miss. Amelie","Embarked"] <- "C"
train[train$Name == "Stone, Mrs. George Nelson (Martha Evelyn)","Embarked"] <- "C"
train$Embarked <- droplevels(train$Embarked)
train$Ticket <- NULL
train$Pclass <- as.factor(train$Pclass)
summary(test)
sapply(test, function(y) sum(length(which(is.na(y)))))
sapply(test, function(y) sum(length(which(y == ""))))
test$Survived <- result$Survived
test <- na.omit(test)
test$Cabin <- NULL
test$Ticket <- NULL
test$Pclass <- as.factor(test$Pclass)
temp <- table(train$Survived == 1)
pct <- (temp[2] / (temp[1] + temp[2]))*100
cat(round(pct,2),"%")
f_sex <- factor(train$Sex)
f_survived <- factor(train$Survived)
males <- length(train[train$Survived == 1 & train$Sex == "male","Name"])
females <- length(train[train$Survived == 1 & train$Sex == "female","Name"])
all_survived <- males + females
cat("Összesen túlélte:",all_survived,"ember, ebből",females," nő, és",males,"férfi")
survived_bar <- c(males,females)
names(survived_bar) <- c("male","female")
barplot(survived_bar,horiz = T,col = survived_bar/10,xlim=c(0,200),main= "túlélők száma nemek szerint")
survived <- train[train$Survived == 1,]
femalePct <- sum(survived$Sex == "female") / sum(train$Sex == "female")
malePct <- sum(survived$Sex == "male") / sum(train$Sex == "male")
allPct <- c(femalePct,malePct)
names(allPct) <- c("female","male")
barplot(allPct,col = allPct*10,horiz = T,xlim = c(0,1),main="Túlélés esélye nemek szerint")
plot(x = train$Sex, y = train$Age,
col ="blue", pch = 1, cex = 1.5,
main = "Utasok kor eloszlása nem szerint",
xlab = "",
ylab = "Kor"
)
plot(x = survived$Sex, y = survived$Age,
col ="blue", pch = 1, cex = 1.5,
main = "Túlélők kor eloszlása nem szerint",
xlab = "",
ylab = "Kor"
)
kids <- sum(survived$Age < 10) / sum(train$Age < 10)
teenagers <- sum(survived$Age >= 10 & survived$Age < 20) / sum(train$Age >= 10 & train$Age < 20)
adults <- sum(survived$Age >= 20 & survived$Age < 50) / sum(train$Age >= 20 & train$Age < 50)
elders <- sum(survived$Age >= 50) / sum(survived$Age >= 50)
allAges <- c(kids,teenagers,adults,elders)
names(allAges) <- c("(0-9)","(10-19)","(20-49)","(50-)")
barplot(allAges,col = rainbow(25),horiz = T,xlim = c(0,1),main = "Túlélés esélye kor szerint",xlab="Valószínűség",ylab="Kor")
sibsbTable <- table(train$SibSp)
barplot(sibsbTable,ylab="testvérek száma",xlab="fők száma",horiz = T,col= rainbow(25),xlim=c(0,200),main="Utasok száma testvérek száma szerint")
parchTable <- table(train$Parch)
barplot(parchTable,ylab="szülő vagy gyerekek száma",xlab="fők száma",horiz = T,col= rainbow(25),xlim=c(0,200),main = "Utasok száma, gyerekek/szülők száma szerint csoportosítva")
embarkTable <- table(train$Embarked)
barplot(embarkTable,horiz = T,xlab="fők száma",ylab="beszállás kódja",col = rainbow(25),main="Utasok száma indulás szerint")
survivedEmbarkTable <- table(survived$Embarked)
barplot(survivedEmbarkTable,col = rainbow(25),horiz = T,xlab="túlélők száma",ylab="indulás kódja",main="Túlélők száma indulás szerint")
cPct <- sum(survived$Embarked == "C") / sum(train$Embarked == "C")
qPct <- sum(survived$Embarked == "Q") / sum(train$Embarked == "Q")
sPct <- sum(survived$Embarked == "S") / sum(train$Embarked == "S")
allPct <- c(cPct,qPct,sPct)
names(allPct) <- c("C","Q","S")
barplot(allPct,col = rainbow(25),main="Túlélési esély indulás szerint",horiz = T,xlab = "túlélési esély",ylab = "indulási kód",xlim= c(0,1))
pclassTable <- table(survived$Pclass)
barplot(pclassTable,xlab="fők száma", ylab="osztályok",col=rainbow(25),horiz = T,main = "Túlélők száma osztályok szerint")
c1pct <- (sum(survived$Pclass == 1) / sum(train$Pclass == 1))
c2pct <- (sum(survived$Pclass == 2) / sum(train$Pclass == 2))
c3pct <- (sum(survived$Pclass == 3) / sum(train$Pclass == 3))
allPct <- c(c1pct,c2pct,c3pct)
names(allPct) <- c(1,2,3)
barplot(allPct,xlim=c(0,1),horiz = T,col = rainbow(25),xlab = "Túlélés esélye",ylab = "Osztályok száma", main = "Túlélés esélye osztályok szerint")
corTrain <- train
corTrain$PassengerId <- NULL
corTrain$Name <- NULL
corTrain$Embarked <- NULL
corTrain$Sex <- as.numeric(train$Sex)
corTrain$Pclass <- as.numeric(train$Pclass)
cor(corTrain)
model <- glm(Survived ~ Age + Sex + Pclass + Embarked, data = train, family = binomial)
summary(model)
exp(model$coefficients)
pred <- predict(model,newdata = test)
test$pred <- pred > 1
test$pred <- factor(test$pred,c(FALSE,TRUE),c('0','1'))
sum(test$pred == "1") / length(test$PassengerId)
accuracy(test$Survived,test$pred)
cor(train$Survived,model$fitted.values)
pr <- prediction(pred,test$Survived)
perf <- performance(pr,measure = "tpr", x.measure = "fpr")
plot(perf)
auc(test$Survived,test$pred)
modelRF <- randomForest(factor(Survived) ~ Pclass + Fare + Embarked + Sex, data=train, importance=TRUE)
modelRF
varImpPlot(modelRF)
importance(modelRF)
test$predRF <- predict(modelRF,newdata = test)
sum(test$predRF == "1") / length(test$PassengerId)
accuracy(test$Survived,test$predRF)
library(rmarkdown)
render("Titanic_Temalabor", output_format = "word_document")
plot(cars)
train <- read.csv('train.csv')
test <- read.csv('test.csv')
result <- read.csv('gender_submission.csv')
library(ROCR)
library(Metrics)
library(randomForest)
str(train)
sapply(train, function(y) sum(length(which(is.na(y)))))
sapply(train, function(y) sum(length(which(y == ""))))
train <- na.omit(train)
train$Cabin <- NULL
nulls <- train[train$Embarked == "",]
table(train$Embarked)
train[train$Name == "Icard, Miss. Amelie","Embarked"] <- "C"
train[train$Name == "Stone, Mrs. George Nelson (Martha Evelyn)","Embarked"] <- "C"
train$Embarked <- droplevels(train$Embarked)
train$Ticket <- NULL
train$Pclass <- as.factor(train$Pclass)
summary(test)
sapply(test, function(y) sum(length(which(is.na(y)))))
sapply(test, function(y) sum(length(which(y == ""))))
test$Survived <- result$Survived
test <- na.omit(test)
test$Cabin <- NULL
test$Ticket <- NULL
test$Pclass <- as.factor(test$Pclass)
temp <- table(train$Survived == 1)
pct <- (temp[2] / (temp[1] + temp[2]))*100
cat(round(pct,2),"%")
f_sex <- factor(train$Sex)
f_survived <- factor(train$Survived)
males <- length(train[train$Survived == 1 & train$Sex == "male","Name"])
females <- length(train[train$Survived == 1 & train$Sex == "female","Name"])
all_survived <- males + females
cat("Összesen túlélte:",all_survived,"ember, ebből",females," nő, és",males,"férfi")
survived_bar <- c(males,females)
names(survived_bar) <- c("male","female")
barplot(survived_bar,horiz = T,col = survived_bar/10,xlim=c(0,200),main= "túlélők száma nemek szerint")
survived <- train[train$Survived == 1,]
femalePct <- sum(survived$Sex == "female") / sum(train$Sex == "female")
malePct <- sum(survived$Sex == "male") / sum(train$Sex == "male")
allPct <- c(femalePct,malePct)
names(allPct) <- c("female","male")
barplot(allPct,col = allPct*10,horiz = T,xlim = c(0,1),main="Túlélés esélye nemek szerint")
plot(x = train$Sex, y = train$Age,
col ="blue", pch = 1, cex = 1.5,
main = "Utasok kor eloszlása nem szerint",
xlab = "",
ylab = "Kor"
)
plot(x = survived$Sex, y = survived$Age,
col ="blue", pch = 1, cex = 1.5,
main = "Túlélők kor eloszlása nem szerint",
xlab = "",
ylab = "Kor"
)
kids <- sum(survived$Age < 10) / sum(train$Age < 10)
teenagers <- sum(survived$Age >= 10 & survived$Age < 20) / sum(train$Age >= 10 & train$Age < 20)
adults <- sum(survived$Age >= 20 & survived$Age < 50) / sum(train$Age >= 20 & train$Age < 50)
elders <- sum(survived$Age >= 50) / sum(survived$Age >= 50)
allAges <- c(kids,teenagers,adults,elders)
names(allAges) <- c("(0-9)","(10-19)","(20-49)","(50-)")
barplot(allAges,col = rainbow(25),horiz = T,xlim = c(0,1),main = "Túlélés esélye kor szerint",xlab="Valószínűség",ylab="Kor")
sibsbTable <- table(train$SibSp)
barplot(sibsbTable,ylab="testvérek száma",xlab="fők száma",horiz = T,col= rainbow(25),xlim=c(0,200),main="Utasok száma testvérek száma szerint")
parchTable <- table(train$Parch)
barplot(parchTable,ylab="szülő vagy gyerekek száma",xlab="fők száma",horiz = T,col= rainbow(25),xlim=c(0,200),main = "Utasok száma, gyerekek/szülők száma szerint csoportosítva")
embarkTable <- table(train$Embarked)
barplot(embarkTable,horiz = T,xlab="fők száma",ylab="beszállás kódja",col = rainbow(25),main="Utasok száma indulás szerint")
survivedEmbarkTable <- table(survived$Embarked)
barplot(survivedEmbarkTable,col = rainbow(25),horiz = T,xlab="túlélők száma",ylab="indulás kódja",main="Túlélők száma indulás szerint")
cPct <- sum(survived$Embarked == "C") / sum(train$Embarked == "C")
qPct <- sum(survived$Embarked == "Q") / sum(train$Embarked == "Q")
sPct <- sum(survived$Embarked == "S") / sum(train$Embarked == "S")
allPct <- c(cPct,qPct,sPct)
names(allPct) <- c("C","Q","S")
barplot(allPct,col = rainbow(25),main="Túlélési esély indulás szerint",horiz = T,xlab = "túlélési esély",ylab = "indulási kód",xlim= c(0,1))
pclassTable <- table(survived$Pclass)
barplot(pclassTable,xlab="fők száma", ylab="osztályok",col=rainbow(25),horiz = T,main = "Túlélők száma osztályok szerint")
c1pct <- (sum(survived$Pclass == 1) / sum(train$Pclass == 1))
c2pct <- (sum(survived$Pclass == 2) / sum(train$Pclass == 2))
c3pct <- (sum(survived$Pclass == 3) / sum(train$Pclass == 3))
allPct <- c(c1pct,c2pct,c3pct)
names(allPct) <- c(1,2,3)
barplot(allPct,xlim=c(0,1),horiz = T,col = rainbow(25),xlab = "Túlélés esélye",ylab = "Osztályok száma", main = "Túlélés esélye osztályok szerint")
corTrain <- train
corTrain$PassengerId <- NULL
corTrain$Name <- NULL
corTrain$Embarked <- NULL
corTrain$Sex <- as.numeric(train$Sex)
corTrain$Pclass <- as.numeric(train$Pclass)
cor(corTrain)
model <- glm(Survived ~ Age + Sex + Pclass + Embarked, data = train, family = binomial)
summary(model)
exp(model$coefficients)
pred <- predict(model,newdata = test)
test$pred <- pred > 1
test$pred <- factor(test$pred,c(FALSE,TRUE),c('0','1'))
sum(test$pred == "1") / length(test$PassengerId)
accuracy(test$Survived,test$pred)
cor(train$Survived,model$fitted.values)
pr <- prediction(pred,test$Survived)
perf <- performance(pr,measure = "tpr", x.measure = "fpr")
plot(perf)
auc(test$Survived,test$pred)
modelRF <- randomForest(factor(Survived) ~ Pclass + Fare + Embarked + Sex, data=train, importance=TRUE)
modelRF
varImpPlot(modelRF)
importance(modelRF)
test$predRF <- predict(modelRF,newdata = test)
sum(test$predRF == "1") / length(test$PassengerId)
accuracy(test$Survived,test$predRF)
typeof(train$Embarked)
train <- read.csv('train.csv')
test <- read.csv('test.csv')
result <- read.csv('gender_submission.csv')
library(ROCR)
library(Metrics)
library(randomForest)
str(train)
sapply(train, function(y) sum(length(which(is.na(y)))))
sapply(train, function(y) sum(length(which(y == ""))))
typeof(train$Embarked)
