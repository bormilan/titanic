f_survived <- factor(train$Survived)
males <- length(train[train$Survived == 1 & train$Sex == "male","Name"])
females <- length(train[train$Survived == 1 & train$Sex == "female","Name"])
all_survived <- males + females
cat("Összesen túlélte:",all_survived,"ember, ebből",females," nő, és",males,"férfi")
survived_bar <- c(males,females)
names(survived_bar) <- c("male","female")
barplot(survived_bar,horiz = T,col = survived_bar/10,xlim=c(0,200),main= "túlélők száma nemek szerint")
survivedAgeTable <- table(survived$Age)
allAgeTable <- table(train$Age)
survivedAgePct <- sum(survivedAgeTable) / sum(allAgeTable)
allAgeTable
survivedAgePct <- survivedAgeTable / allAgeTable
survivedAgeTable
under10 <- sum(survived$Age < 10) / sum(train$Age < 10)
under10
teenagers <- sum(survived$Age >= 10 & survived$Age < 20) / sum(train$Age >= 10 & train$Age < 20)
kids <- sum(survived$Age < 10) / sum(train$Age < 10)
teenagers <- sum(survived$Age >= 10 & survived$Age < 20) / sum(train$Age >= 10 & train$Age < 20)
adults <- sum(survived$Age >= 20 $ survived$Age < 50) / sum(train$Age >= 20 $ train$Age < 50)
adults <- sum(survived$Age >= 20 & survived$Age < 50) / sum(train$Age >= 20 & train$Age < 50)
elders <- sum(survived$Age >= 50) / sum(survived$Age >= 50)
allAges <- c(kids,teenagers,adults,elders)
names(allAges) <- c("Kids(0-9)","Teenagers(10-19)","Adults(20-49)","Elders(50-)")
survived <- train[train$Survived == 1,]
plot(x = survived$Sex, y = survived$Age,
col ="blue", pch = 1, cex = 1.5,
main = "Túlélők kor eloszlása nem szerint",
xlab = "",
ylab = "Kor"
)
kids <- sum(survived$Age < 10) / sum(train$Age < 10)
teenagers <- sum(survived$Age >= 10 & survived$Age < 20) / sum(train$Age >= 10 & train$Age < 20)
adults <- sum(survived$Age >= 20 & survived$Age < 50) / sum(train$Age >= 20 & train$Age < 50)
elders <- sum(survived$Age >= 50) / sum(survived$Age >= 50)
allAges <- c(kids,teenagers,adults,elders)
names(allAges) <- c("Kids(0-9)","Teenagers(10-19)","Adults(20-49)","Elders(50-)")
barplot(allAges,col = rainbow(25),horiz = T,xlab = c(0,100),main = "Túlélés esélye kor szerint",xlab="Valószínűség",ylab="Kor")
kids <- sum(survived$Age < 10) / sum(train$Age < 10)
teenagers <- sum(survived$Age >= 10 & survived$Age < 20) / sum(train$Age >= 10 & train$Age < 20)
adults <- sum(survived$Age >= 20 & survived$Age < 50) / sum(train$Age >= 20 & train$Age < 50)
elders <- sum(survived$Age >= 50) / sum(survived$Age >= 50)
allAges <- c(kids,teenagers,adults,elders)
names(allAges) <- c("Kids(0-9)","Teenagers(10-19)","Adults(20-49)","Elders(50-)")
barplot(allAges,col = rainbow(25),horiz = T,xlim = c(0,100),main = "Túlélés esélye kor szerint",xlab="Valószínűség",ylab="Kor")
kids <- sum(survived$Age < 10) / sum(train$Age < 10)
teenagers <- sum(survived$Age >= 10 & survived$Age < 20) / sum(train$Age >= 10 & train$Age < 20)
adults <- sum(survived$Age >= 20 & survived$Age < 50) / sum(train$Age >= 20 & train$Age < 50)
elders <- sum(survived$Age >= 50) / sum(survived$Age >= 50)
allAges <- c(kids,teenagers,adults,elders)
names(allAges) <- c("Kids(0-9)","Teenagers(10-19)","Adults(20-49)","Elders(50-)")
barplot(allAges,col = rainbow(25),horiz = T,xlim = c(0,1),ylim = c(0,100),main = "Túlélés esélye kor szerint",xlab="Valószínűség",ylab="Kor")
kids <- sum(survived$Age < 10) / sum(train$Age < 10)
teenagers <- sum(survived$Age >= 10 & survived$Age < 20) / sum(train$Age >= 10 & train$Age < 20)
adults <- sum(survived$Age >= 20 & survived$Age < 50) / sum(train$Age >= 20 & train$Age < 50)
elders <- sum(survived$Age >= 50) / sum(survived$Age >= 50)
allAges <- c(kids,teenagers,adults,elders)
names(allAges) <- c("Kids(0-9)","Teenagers(10-19)","Adults(20-49)","Elders(50-)")
barplot(allAges,col = rainbow(25),horiz = T,xlim = c(0,1),ylim = c(0,10000),main = "Túlélés esélye kor szerint",xlab="Valószínűség",ylab="Kor")
kids <- sum(survived$Age < 10) / sum(train$Age < 10)
teenagers <- sum(survived$Age >= 10 & survived$Age < 20) / sum(train$Age >= 10 & train$Age < 20)
adults <- sum(survived$Age >= 20 & survived$Age < 50) / sum(train$Age >= 20 & train$Age < 50)
elders <- sum(survived$Age >= 50) / sum(survived$Age >= 50)
allAges <- c(kids,teenagers,adults,elders)
names(allAges) <- c("Kids(0-9)","Teenagers(10-19)","Adults(20-49)","Elders(50-)")
barplot(allAges,col = rainbow(25),horiz = T,xlim = c(0,1),main = "Túlélés esélye kor szerint",xlab="Valószínűség",ylab="Kor")
kids <- sum(survived$Age < 10) / sum(train$Age < 10)
teenagers <- sum(survived$Age >= 10 & survived$Age < 20) / sum(train$Age >= 10 & train$Age < 20)
adults <- sum(survived$Age >= 20 & survived$Age < 50) / sum(train$Age >= 20 & train$Age < 50)
elders <- sum(survived$Age >= 50) / sum(survived$Age >= 50)
allAges <- c(kids,teenagers,adults,elders)
names(allAges) <- c("(0-9)","(10-19)","(20-49)","(50-)")
barplot(allAges,col = rainbow(25),horiz = T,xlim = c(0,1),main = "Túlélés esélye kor szerint",xlab="Valószínűség",ylab="Kor")
sibsbTable <- table(train$SibSp)
barplot(sibsbTable,ylab="testvérek száma",xlab="fők száma",horiz = T,col= rainbow(25),xlim=c(0,200),main="Utasok száma testvérek száma szerint")
parchTable <- table(train$Parch)
barplot(parchTable,ylab="szülő vagy gyerekek száma",xlab="fők száma",horiz = T,col= rainbow(25),xlim=c(0,200),main = "Utasok száma, gyerekek/szülők száma szerint csoportosítva")
pclassTable <- table(survived$Pclass)
barplot(pclassTable,xlab="fők száma", ylab="osztályok",col=rainbow(25),horiz = T,main = "Túlélők száma osztályok szerint")
c1pct <- (sum(survived$Pclass == 1) / sum(train$Pclass == 1))
c2pct <- (sum(survived$Pclass == 2) / sum(train$Pclass == 2))
c3pct <- (sum(survived$Pclass == 3) / sum(train$Pclass == 3))
allPct <- c(c1pct,c2pct,c3pct)
names(allPct) <- c(1,2,3)
barplot(allPct,xlim=c(0,1),horiz = T,col = rainbow(25),xlab = "Túlélés esélye",ylab = "Osztályok száma", main = "Túlélés esélye osztályok szerint")
?glm
model <- glm(survived ~ age + sex + pclass + embarked, data = train, family = "binomial")
model <- glm(Survived ~ Age + Sex + Pclass + Embarked, data = train, family = "binomial")
summary(model)
embarkTable <- table(train$Embarked)
embarkTable
embarkTable <- table(train$Embarked)
barplot(embarkTable)
embarkTable <- table(train$Embarked)
barplot(embarkTable,horiz = T,xlab="fők száma",ylab="beszállás kódja",col = rainbow(25),main="Utasok száma indulás szerint")
survivedEmbarkTable <- table(survived$Embarked)
barplot(survivedEmbarkTable,col = rainbow(25),horiz = T,xlab="túlélés esélye",ylab="indulás kódja",main="Túlélés esélye indulás szerint")
survivedEmbarkTable <- table(survived$Embarked)
barplot(survivedEmbarkTable,col = rainbow(25),horiz = T,xlab="túlélők száma",ylab="indulás kódja",main="Túlélők száma indulás szerint")
cPct <- sum(survived$Embarked == "C") / sum(train$Embarked == "C")
qPct <- sum(survived$Embarked == "Q") / sum(train$Embarked == "Q")
sPct <- sum(survived$Embarked == "S") / sum(train$Embarked == "Q")
allPct <- c(cPct,qPct,sPct)
names(allPct) <- c("C","Q","S")
barplot(allPct,col = rainbow(25),main="Túlélési esély indulás szerint",horiz = T,xlab = "túlélési esély",ylab = "indulási kód",xlim= c(0,1))
cPct <- sum(survived$Embarked == "C") / sum(train$Embarked == "C")
qPct <- sum(survived$Embarked == "Q") / sum(train$Embarked == "Q")
sPct <- sum(survived$Embarked == "S") / sum(train$Embarked == "S")
allPct <- c(cPct,qPct,sPct)
names(allPct) <- c("C","Q","S")
barplot(allPct,col = rainbow(25),main="Túlélési esély indulás szerint",horiz = T,xlab = "túlélési esély",ylab = "indulási kód",xlim= c(0,1))
kids <- sum(survived$Age < 10) / sum(train$Age < 10)
teenagers <- sum(survived$Age >= 10 & survived$Age < 20) / sum(train$Age >= 10 & train$Age < 20)
adults <- sum(survived$Age >= 20 & survived$Age < 50) / sum(train$Age >= 20 & train$Age < 50)
elders <- sum(survived$Age >= 50) / sum(survived$Age >= 50)
allAges <- c(kids,teenagers,adults,elders)
names(allAges) <- c("(0-9)","(10-19)","(20-49)","(50-)")
barplot(allAges,col = rainbow(25),horiz = T,xlim = c(0,1),main = "Túlélés esélye kor szerint",xlab="Valószínűség",ylab="Kor")
sibsbTable <- table(train$SibSp)
barplot(sibsbTable,ylab="testvérek száma",xlab="fők száma",horiz = T,col= rainbow(25),xlim=c(0,200),main="Utasok száma testvérek száma szerint")
parchTable <- table(train$Parch)
barplot(parchTable,ylab="szülő vagy gyerekek száma",xlab="fők száma",horiz = T,col= rainbow(25),xlim=c(0,200),main = "Utasok száma, gyerekek/szülők száma szerint csoportosítva")
embarkTable <- table(train$Embarked)
barplot(embarkTable,horiz = T,xlab="fők száma",ylab="beszállás kódja",col = rainbow(25),main="Utasok száma indulás szerint")
survivedEmbarkTable <- table(survived$Embarked)
barplot(survivedEmbarkTable,col = rainbow(25),horiz = T,xlab="túlélők száma",ylab="indulás kódja",main="Túlélők száma indulás szerint")
cPct <- sum(survived$Embarked == "C") / sum(train$Embarked == "C")
qPct <- sum(survived$Embarked == "Q") / sum(train$Embarked == "Q")
sPct <- sum(survived$Embarked == "S") / sum(train$Embarked == "S")
allPct <- c(cPct,qPct,sPct)
names(allPct) <- c("C","Q","S")
barplot(allPct,col = rainbow(25),main="Túlélési esély indulás szerint",horiz = T,xlab = "túlélési esély",ylab = "indulási kód",xlim= c(0,1))
pclassTable <- table(survived$Pclass)
barplot(pclassTable,xlab="fők száma", ylab="osztályok",col=rainbow(25),horiz = T,main = "Túlélők száma osztályok szerint")
c1pct <- (sum(survived$Pclass == 1) / sum(train$Pclass == 1))
c2pct <- (sum(survived$Pclass == 2) / sum(train$Pclass == 2))
c3pct <- (sum(survived$Pclass == 3) / sum(train$Pclass == 3))
allPct <- c(c1pct,c2pct,c3pct)
names(allPct) <- c(1,2,3)
barplot(allPct,xlim=c(0,1),horiz = T,col = rainbow(25),xlab = "Túlélés esélye",ylab = "Osztályok száma", main = "Túlélés esélye osztályok szerint")
model <- glm(Survived ~ Age + Sex + Pclass + Embarked, data = train, family = "binomial")
summary(model)
plot(train$Survived,train$Fare)
train$Pclass <- as.factor(train$Pclass)
model <- glm(Survived ~ Age + Sex + Pclass + Embarked, data = train, family = "binomial")
summary(model)
predict(model,data.frame(Age = 20,Sex = "male",Pclass="2",Embarked="S"))
predict(model,data.frame(Age = 40,Sex = "male",Pclass="2",Embarked="S"))
predict(model,data.frame(Age = 40,Sex = "female",Pclass="2",Embarked="S"))
predict(model,data.frame(Age = 40,Sex = "male",Pclass="2",Embarked="S"))
predict(model,test)
predict(model,test$Age,test$Sex,test$Pclass,test$Embarked)
apply(test,predict(model,test$Age,test$Sex,test$Pclass,test$Embarked)
apply(test,predict(model,test$Age,test$Sex,test$Pclass,test$Embarked))
apply(test,1,predict(model,test$Age,test$Sex,test$Pclass,test$Embarked))
?apply
apply(test,1,function(x) predict(model,x))
apply(test,1,function(x) predict(model,x$Age,x$Sex,x$Pclass,x$Embarked))
apply(test,1,function(x) predict(model,x))
predict(model,newdata = test)
test$Pclass <- as.factor(test$Pclass)
predict(model,newdata = test)
pred <- predict(model,newdata = test)
survivedPred <- sum(pred > 1)
survivedPred
survivedPct <- survivedPred / lentgh(test$PassengerId)
survivedPct <- survivedPred / length(test$PassengerId)
survivedPred / length(test$PassengerId)
summary(pred)
pred
testSurvived <- pred > 1
testPredict <- c(test$PassengerId,testSurvived)
testPredict
names(testSurvived) <- test$PassengerId
testPredict
testSurvived
as.data.frame(testSurvived)
test$Pclass <- as.factor(test$Pclass)
pred <- predict(model,newdata = test)
testSurvived <- pred > 1
names(testSurvived) <- test$PassengerId
testPred <- as.data.frame(testSurvived)
testPred
View(testPred)
View(testPred)
testSurvived <- c(test$PassengerId,testSurvived)
testPred <- as.data.frame(testSurvived)
testPred
testSurvived <- pred > 1
testPred <- as.data.frame(test$PassengerId,testSurvived)
testPred <- data.frame(PassengerId = test$PassengerId,Survived = testSurvived)
result <- read.csv('gender_submission.csv')
View(result)
testPred <- factor(testPred,c(FALSE,TRUE),c('0','1'))
result <- sum(testPred$PassengerId == result$PassengerId & testPred$Survived == result$Survived )
test$Pclass <- as.factor(test$Pclass)
testSurvived <- pred > 1
testPred <- data.frame(PassengerId = test$PassengerId,Survived = testSurvived)
testPred <- factor(testPred,c(FALSE,TRUE),c('0','1'))
pred <- predict(model,newdata = test)
testSurvived <- pred > 1
testPred <- data.frame(PassengerId = test$PassengerId,Survived = testSurvived)
testPred$Survived <- factor(testPred$Survived,c(FALSE,TRUE),c('0','1'))
result <- sum(testPred$PassengerId == result$PassengerId & testPred$Survived == result$Survived )
test <- read.csv('test.csv')
result <- read.csv('gender_submission.csv')
test$Pclass <- as.factor(test$Pclass)
pred <- predict(model,newdata = test)
testSurvived <- pred > 1
testPred <- data.frame(PassengerId = test$PassengerId,Survived = testSurvived)
testPred$Survived <- factor(testPred$Survived,c(FALSE,TRUE),c('0','1'))
result <- sum(testPred$PassengerId == result$PassengerId & testPred$Survived == result$Survived )
result <- read.csv('gender_submission.csv')
sum(testPred$PassengerId == result$PassengerId & testPred$Survived == result$Survived )
View(testPred)
str(result)
str(result)
str(testPred)
testPred$Survived <- as.integer(factor(testPred$Survived,c(FALSE,TRUE),c('0','1')))
sum(testPred$PassengerId == result$PassengerId & testPred$Survived == result$Survived )
str(result)
str(testPred)
testPred$Survived <- integer(testPred$Survived,c(FALSE,TRUE),c('0','1')))
testPred$Survived <- factor(testPred$Survived,c(FALSE,TRUE),c('0','1')))
testPred$Survived <- factor(testPred$Survived,c(FALSE,TRUE),c('0','1')))
pred <- predict(model,newdata = test)
testSurvived <- pred > 1
testPred <- data.frame(PassengerId = test$PassengerId,Survived = testSurvived)
testPred$Survived <- factor(testPred$Survived,c(FALSE,TRUE),c('0','1')))
pred <- predict(model,newdata = test)
testSurvived <- pred > 1
testPred <- data.frame(PassengerId = test$PassengerId,Survived = testSurvived)
test <- read.csv('test.csv')
result <- read.csv('gender_submission.csv')
summary(test)
sapply(test, function(y) sum(length(which(is.na(y)))))
sapply(test, function(y) sum(length(which(y == ""))))
test <- na.omit(test)
test$Cabin <- NULL
test$Ticket <- NULL
test$Pclass <- as.factor(test$Pclass)
pred <- predict(model,newdata = test)
testSurvived <- pred > 1
testPred <- data.frame(PassengerId = test$PassengerId,Survived = testSurvived)
testPred$Survived <- factor(testPred$Survived,c(FALSE,TRUE),c('0','1')))
testPred$Survived <- factor(testPred$Survived,c(FALSE,TRUE),c('0','1'))
test <- read.csv('test.csv')
test$Pclass <- as.factor(test$Pclass)
pred <- predict(model,newdata = test)
testSurvived <- pred > 1
testPred <- data.frame(PassengerId = test$PassengerId,Survived = testSurvived)
testPred$Survived <- factor(testPred$Survived,c(FALSE,TRUE),c('0','1'))
sum(testPred$PassengerId == result$PassengerId & testPred$Survived == result$Survived )
str(result)
str(testPred)
result$Survived <- as.factor(result$Survived)
str(result)
str(testPred)
sum(testPred$PassengerId == result$PassengerId & testPred$Survived == result$Survived )
str(result)
str(testPred)
accuracy(pred)
test <- read.csv('test.csv')
result <- read.csv('gender_submission.csv')
test <- na.omit(test)
test$Cabin <- NULL
test$Ticket <- NULL
test$Pclass <- as.factor(test$Pclass)
pred <- predict(model,newdata = test)
testSurvived <- pred > 1
testPred <- data.frame(PassengerId = test$PassengerId,Survived = testSurvived)
testPred$Survived <- factor(testPred$Survived,c(FALSE,TRUE),c('0','1'))
sum(testPred$Survived == '1') / length(testPred$PassengerId)
cor(train$Survived,train$Pclass)
cor(train$Survived,train$Age)
cor(train$Survived,train$SibSp)
cor(train$Survived,train$Age)
cor(train$Survived,train$SibSp)
cor(train$Survived,train$Parch)
cor(train$Survived,train$Pclass)
cor(train$Survived,train$Parch)
cor(train$Survived,as.numeric(train$Pclass))
cor(train$Survived,as.numeric(train$Sex))
cor(train$Survived,train$Age)
cor(train$Survived,train$SibSp)
cor(train$Survived,train$Parch)
cor(train$Survived,as.numeric(train$Pclass))
cor(train$Survived,as.numeric(train$Sex))
cor(train,testPred)
cor(train$Survived,model$fitted.values)
cor(train,model$fitted.values)
cor(train$Sex,model$fitted.values)
cor(train$Age,model$fitted.values)
cor(train$Survived,model$fitted.values)
plot(model)
cor(test,model$fitted.values)
cor(train$Survived,model$fitted.values)
plot(1:100, testPred[,"fit"], type = "l")
plot(1:100, testPred$Survived, type = "l")
plot(0:1, testPred$Survived, type = "l")
plot(min(testPred$Survived):max(testPred$Survived), testPred$Survived, type = "l")
plot(1:1000, testPred$Survived, type = "l")
plot(c(0,1), testPred$Survived, type = "l")
plot(testPred$PassengerId, testPred$Survived, type = "l")
plot(testPred$Survived, testPred$PassengerId, type = "l")
plot(model)
anova(model,test = 'Chisq')
View(result)
View(result)
test <- read.csv('test.csv')
result <- read.csv('gender_submission.csv')
sapply(test, function(y) sum(length(which(y == ""))))
summary(test)
sapply(test, function(y) sum(length(which(is.na(y)))))
sapply(test, function(y) sum(length(which(y == ""))))
test$Survived <- result$Survived
test <- na.omit(test)
test$Cabin <- NULL
test$Ticket <- NULL
temp <- table(train$Survived == 1)
pct <- (temp[2] / (temp[1] + temp[2]))*100
cat(round(pct,2),"%")
f_sex <- factor(train$Sex)
f_survived <- factor(train$Survived)
males <- length(train[train$Survived == 1 & train$Sex == "male","Name"])
females <- length(train[train$Survived == 1 & train$Sex == "female","Name"])
all_survived <- males + females
cat("Összesen túlélte:",all_survived,"ember, ebből",females," nő, és",males,"férfi")
survived_bar <- c(males,females)
names(survived_bar) <- c("male","female")
barplot(survived_bar,horiz = T,col = survived_bar/10,xlim=c(0,200),main= "túlélők száma nemek szerint")
train$Pclass <- as.factor(train$Pclass)
model <- glm(Survived ~ Age + Sex + Pclass + Embarked, data = train, family = "binomial")
summary(model)
test$Pclass <- as.factor(test$Pclass)
pred <- predict(model,newdata = test)
test$pred <- pred > 1
test$pred <- factor(test$pred,c(FALSE,TRUE),c('0','1'))
sum(test$pred == '1') / length(test$PassengerId)
install.packages("Metrics")
install.packages("ROCR")
auc(test$Survived,test$pred)
library(ROCR)
library(Metrics)
auc(test$Survived,test$pred)
plot(auc(test$Survived,test$pred))
auc(test$Survived,test$pred)
library(ROCR)
library(Metrics)
pr <- prediction(pred,test$Survived)
perf <- performance(pr,measure = "tpr", x.measure = "fpr")
plot(perf) > auc(test$Survived,test$pred)
pr <- prediction(pred,test$Survived)
perf <- performance(pr,measure = "tpr", x.measure = "fpr")
plot(perf)
auc(test$Survived,test$pred)
plot(perf)
cor(train$Survived,model$fitted.values)
library(ROCR)
library(Metrics)
pr <- prediction(pred,test$Survived)
perf <- performance(pr,measure = "tpr", x.measure = "fpr")
plot(perf)
auc(test$Survived,test$pred)
predPct <- sum(test$pred) / sum(test$Survived)
predPct <- sum(test$pred == 1) / sum(test$Survived == 1)
sum(test$pred == 1) / sum(test$Survived == 1)
apply(test,function(x) x$Survived == x$pred)
apply(test,FUN = function(x) x$Survived == x$pred)
apply(test,1,FUN = function(x) x$Survived == x$pred)
accuracy(test$Survived,test$pred)
View(backup)
View(backup)
install.packages("randomForest")
library(randomForest)
classifier <- randomForest(Survived ~ Age + Sex + Pclass + Embarked, data = train, ntree = 100, mtry = 2, importance = TRUE)
classifier
varImpPlot(classifier)
pred2 <- predict(classifier,newdata = test)
str(test)
pred2 <- predict(classifier,newdata = test)
classifier <- randomForest(Survived ~ ., data = train, ntree = 100, mtry = 2, importance = TRUE)
cor(train)
cor(train$Survived,train$Pclass,train$Sex,train$Age,train$SibSp,train$Parch,train$Fare)
cor(train$Survived,train$Pclass,train$Sex,train$Age)
cor(train[-Name,PassangerId,Embarked])
cor(train[-Name,PassengerId,Embarked])
cor(train[-Name,Embarked])
cor(train[-Name])
cor(train)
delete <- c("PassengerId","Name","Ticket","Embarked","Cabin")
corTrain$Sex <- train[-delete]
corTrain$Sex <- train[,-delete]
corTrain <- train
View(corTrain)
View(corTrain)
corTran$PassengerId <- NULL
corTrain$PassengerId <- NULL
corTrain$Name <- NULL
corTrain$Embarked <- NULL
corTrain$Sex <- as.numeric(train$Sex)
cor(train)
cor(corTrain)
str(corTrain)
corTrain$Pclass <- as.numeric(train$Pclass)
cor(corTrain)
model2 <- glm(Survived ~ Age + Sex + Pclass + Embarked, data = corTrain, family = "binomial")
model2 <- glm(Survived ~ ., data = corTrain, family = "binomial")
summary(model2)
corTest <- test
corTest <- test
corTest$PassengerId <- NULL
corTest$Name <- NULL
corTest$Embarked <- NULL
corTest$Sex <- as.numeric(train$Sex)
corTest$Sex <- as.numeric(test$Sex)
pred <- predict(model2,newdata = corTest)
corTest$Pclass <- as.numeric(test$Pclass)
pred <- predict(model2,newdata = corTest)
corTest$pred <- pred > 1
corTest$pred <- factor(corTest$pred,c(FALSE,TRUE),c('0','1'))
sum(corTest$pred == '1') / length(corTest$PassengerId)
corTest <- test
corTest$PassengerId <- NULL
corTest$Name <- NULL
corTest$Embarked <- NULL
corTest$Sex <- as.numeric(test$Sex)
corTest$Pclass <- as.numeric(test$Pclass)
pred <- predict(model2,newdata = corTest)
corTest$pred <- pred > 1
corTest$pred <- factor(corTest$pred,c(FALSE,TRUE),c('0','1'))
sum(corTest$pred == '1') / length(corTest$PassengerId)
accuracy(corTest$Survived,corTest$pred)
accuracy(test$Survived,test$pred)
library(ROCR)
library(Metrics)
accuracy(test$Survived,test$pred)
accuracy(corTest$Survived,corTest$pred)
corTrain <- train
corTrain$PassengerId <- NULL
corTrain$Name <- NULL
corTrain$Embarked <- NULL
corTrain$Sex <- as.numeric(train$Sex)
corTrain$Pclass <- as.numeric(train$Pclass)
cor(corTrain)
corTrain <- train
corTrain$PassengerId <- NULL
corTrain$Name <- NULL
corTrain$Embarked <- NULL
corTrain$Sex <- as.numeric(train$Sex)
corTrain$Pclass <- as.numeric(train$Pclass)
cor(corTrain)
exp(model$coefficients)
test$Pclass <- as.factor(test$Pclass)
pred <- predict(model,newdata = test)
predTrain <- predict(model,type = "response")
table(train$Survived,predTrain >=0,5)
test$Pclass <- as.factor(test$Pclass)
pred <- predict(model,newdata = test)
predTrain <- predict(model,type = "response")
table(train$Survived,predTrain >=1)
test$pred <- pred > 1
test$pred <- factor(test$pred,c(FALSE,TRUE),c('0','1'))
sum(test$pred == '1') / length(test$PassengerId)
train$Pclass <- as.factor(train$Pclass)
model <- glm(Survived ~ Age + Sex + Pclass + Embarked, data = train, family = binomial)
summary(model)
exp(model$coefficients)
test$Pclass <- as.factor(test$Pclass)
pred <- predict(model,newdata = test)
predTrain <- predict(model,type = "response")
table(train$Survived,predTrain >=1)
test$pred <- pred > 1
test$pred <- factor(test$pred,c(FALSE,TRUE),c('0','1'))
sum(test$pred == '1') / length(test$PassengerId)
test$Pclass <- as.factor(test$Pclass)
pred <- predict(model,newdata = test)
predTrain <- predict(model,type = "response")
table(train$Survived,predTrain >=0.5)
test$pred <- pred > 1
test$pred <- factor(test$pred,c(FALSE,TRUE),c('0','1'))
sum(test$pred == '1') / length(test$PassengerId)
(359+211) / nrow(Train)
(359+211) / nrow(train)
test$Pclass <- as.factor(test$Pclass)
pred <- predict(model,newdata = test)
predTrain <- predict(model,type = "response")
table(train$Survived,predTrain >=0.5)
(359+211) / nrow(train)
test$pred <- pred > 1
test$pred <- factor(test$pred,c(FALSE,TRUE),c('0','1'))
sum(test$pred == '1') / length(test$PassengerId)
test$Pclass <- as.factor(test$Pclass)
pred <- predict(model,newdata = test)
predTrain <- predict(model,type = "response")
table(test$Survived,predTrain >=0.5)
test$Pclass <- as.factor(test$Pclass)
pred <- predict(model,newdata = test)
test$pred <- pred > 1
test$pred <- factor(test$pred,c(FALSE,TRUE),c('0','1'))
sum(test$pred == '1') / length(test$PassengerId)
cor(train$Survived,model$fitted.values)
library(ROCR)
library(Metrics)
pr <- prediction(pred,test$Survived)
perf <- performance(pr,measure = "tpr", x.measure = "fpr")
plot(perf)
auc(test$Survived,test$pred)
exp(model$coefficients)
train$Pclass <- as.factor(train$Pclass)
model <- glm(Survived ~ Age + Sex + Pclass + Embarked, data = train, family = binomial)
summary(model)
